# Example svmp-overseer configuration file

# External TCP port to listen on for client connections.
# default = 3000
port: 3000

rest_server_url: 'http://localhost:3000'

################################################################################
# Database settings
################################################################################

# MongoDB database url
db:
    production: "mongodb://localhost/svmp_overseer_production_db"
    test: "mongodb://localhost/svmp_overseer_test_db"

################################################################################
# WebConsole settings
################################################################################

# Web session secret
session_secret: "this should be something really long"

# Email settings used to notify admin and users on account creation
# If the host field is left empty, email functionality will be ignored
smtp:
    host: ""
    port: 465
    secure_connection: true
    username: ""
    password: ""
    admin_email: ""

################################################################################
# SSL/TLS configuration
################################################################################

# default = false
enable_ssl: true

# SSL certificate and private key paths
# (required if tls_proxy == true)
server_certificate: 'path/to/overseer-cert.pem'
private_key: 'path/to/overseer-key.pem'

# SSL private key password
# (if the server private key file is password protected)
private_key_pass: 'changeme_password'

# TLS CA Cert to validate user certs against
# only used if use_tls_user_auth == true
ca_cert: 'path/to/ca-cert.pem'

################################################################################
# Authentication options
################################################################################

# Choose the style of user authentication
# Options: 'password', 'certificate', 'pam'
authentication_type: 'password'

# Maximum length of a client session (in seconds) before it is
# forcibly disconnected. A client can reconnect with a token any time in this period.
# default = 21600 [6 hours]
max_session_length: 21600

# Signing algorithm for login tokens.
# Must be one of the RSA or ECDSA options listed here:
# https://github.com/auth0/node-jsonwebtoken#algorithms-supported
jwt_signing_alg: "RS512"

# Only has an effect when cert_user_auth is also true, in which case we expect
# the reverse proxy to inject special headers containing the data from the user
# certificate.
# default = false
#behind_reverse_proxy: false

# PAM 'service' name to use. I.e., which file under /etc/pam.d/
# default = 'svmp'
#pam_service: 'svmp'


################################################################################
# VM settings
################################################################################

# Port to connect to on Android VMs
# default = 8001
vm_port: 8001

# Maximum life span of an idle VM (in seconds) before it is expired and gets destroyed.
# This is used after a session is disconnected.
# default = 3600 [1 hour]
vm_idle_ttl: 3600

# Interval (in seconds) of time to check for expired VMs.
# This is used after a session is disconnected.
# default = 300 [5 minutes]
vm_check_interval: 300

################################################################################
# svmp-server settings
################################################################################

# Address of the svmp-server that we tell the client to connect to
proxy_host: 'svmp-server.example.com'

# Port the svmp-server listens on
proxy_port: 8080

################################################################################
# Logging options
################################################################################

# Log file path
log_file: 'proxy_log.txt'

# Log level to use, omits lower log levels
# Levels, lowest to highest: silly, debug, verbose, info, warn, error
# default = 'info'
#log_level: 'info'

################################################################################
# Cloud API configuration
################################################################################

# Valid values: openstack, aws
cloud_platform: "openstack"

# Openstack cloud connection details
openstack:
    # only required if 'cloud_platform' is set to 'openstack'
    authUrl: "https://localhost:5000/"
    username: "test"
    password: "test"
    # tenantId: "0123456789abcdef0123456789abcdef"
    tenantName: "test"
    region: "RegionOne"

# Amazon Web Services cloud connection details
aws:
    # only required if 'cloud_platform' is set to 'aws'
    accessKeyId: ""
    secretAccessKey: ""
    region: "us-east-1"
    availabilityZone: "us-east-1a"

# VM/Volume defaults
# images: a map of device types to their respective image ids on the cloud server.
# vmflavor: the value (as a string) of the VM flavor. For AWS, this is the instance type.
#   OpenStack flavors must be a number, example: m1.tiny = '1', m1.small = '2'
#   AWS instance types must be a string, example: 't1.micro', 'm1.small'
#   Run 'bin/cli.js images' for a listing.
# goldsnapshotId: the snapshot id to use for new volumes
# goldsnapshotSize: only used for OpenStack; the integer size in GBs, SAME AS THE goldsnapshot SIZE.
# use_floating_ip: only used for OpenStack; if this is enabled, we assign a floating IP address to the VM when
#   we start it. This is necessary if the proxy server isn't running within Openstack itself.
# floating_ip_pool: only used for OpenStack; if use_floating_ip is enabled, this can be optionally specified to
#   tell Openstack what ip pool to use when allocating new addresses
# pollintervalforstartup: this is the interval in milliseconds the apis to check for a running VM

new_vm_defaults:
    images:
        # Mapping of cloud image ID to a friendly name. These are the names used by the
        # configuration tool's add-user command.
        # each device type should have its own name and image ID in key/value format, e.g.:
        # "device_type": "imageID",
        note2: "1234"
        example_type_2: "image id"
    vmflavor: "1"
    goldsnapshotId: ""
    goldsnapshotSize: 6
    use_floating_ips: false
    floating_ip_pool: "nova"
    pollintervalforstartup: 2000

################################################################################
# WebRTC settings for video and audio streaming to the client
################################################################################

webrtc:
    # Enter zero or more servers to use for in ICE negotiation for NAT traversal
    ice_servers:
        # Ex1: Unauthenticated STUN server
        - url: 'stun:<stun server ip>:3478'

        # Ex2: Password protected STUN server
        - url: 'stun:<stun server ip>:3478'
          password: 'stun-credential'

        # Ex3: TURN relay server (username & password required)
        - url: 'turn:<turn server ip>:3478'
          username: 'turn-user'
          password: 'turn-password'

    # WebRTC constraints and paramenters that are sent to the peers.
    # Don't change unless you know what you're doing.
    #video: { audio: true, video: { mandatory: {}, optional: [] } }
    #pc: { optional: [ {DtlsSrtpKeyAgreement: true} ] }
